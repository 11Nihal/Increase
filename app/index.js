import React, { Component } from 'react';
import { View, Text, StyleSheet, Picker, AppState, Platform } from 'react-native';
import PushController from './PushController';
import PushNotification from 'react-native-push-notification';

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  picker: {
    width: 100,
  },
});

export default class App extends Component {
  constructor(props) {
    super(props);

    // this.handleAppStateChange = this.handleAppStateChange.bind(this);
    this.state = {
      seconds: 1,
    };
  }

  // componentDidMount() {
  //   AppState.addEventListener('change', this.handleAppStateChange);
  // }

  // nhl() {
  //   AppState.removeEventListener('change', this.handleAppStateChange);
  // }

  // handleAppStateChange(appState) {
  //   if (appState === 'background') {
  //     let date = new Date(Date.now() + (this.state.seconds * 1000));

  //     if (Platform.OS === 'ios') {
  //       date = date.toISOString();
  //     }

  //     PushNotification.localNotificationSchedule({
  //       message: "My Notification Message",
  //       date,
  //     });
  //   }
  // }

  render() {
    return (
      <View style={styles.container}>
        <Text style={styles.welcome}>
          Choose your notification time in seconds.
        </Text>
        <Picker
          style={styles.picker}
          selectedValue={this.state.seconds}
          onValueChange={
            (seconds) => this.setState({ seconds })}
        >
          <Picker.Item label="5" value={5} />
          <Picker.Item label="10" value={10} />
          <Picker.Item label="15" value={15} />
        </Picker>
        {/* <PushController /> */}
        <Text onPress={() => {
          let date = new Date(Date.now() + (200));
          PushNotification.localNotificationSchedule({
            //  message:'nhl',
            //   bigText: "nihal",
            //   subText:"hello user please use our app",
            //   color: "red",

            //   title:"increase .",

            id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: "My Notification Ticker", // (optional)
            autoCancel: true, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_launcher", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
            subText: "This is a subText", // (optional) default: none
            color: "red", // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: true, // (optional) set whether this is an "ongoing" notification
            priority: "high", // (optional) set notification priority, default: high
            visibility: "private", // (optional) set notification visibility, default: private
            importance: "high", // (optional) set notification importance, default: high
            message: "haha",

            title: "My Notification Title", // (optional)
            // message: "My Notification Message", // (required)
            playSound: false, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
            repeatType: 'sec', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
            actions: '["Cancel", "Update"]',  // (Android only) See the doc for notification actions to know more
            date,
          });
        }
          // AppState.removeEventListener('change', this.handleAppStateChange) 
        }>
          nnnhhhhlllll
        </Text>
      </View >
    );
  }
}
